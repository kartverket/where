# This is the WHERE configuration file. It is read and handled by the where.config module, and further documentation
# can be found there.

[rinex_obs]


#
# GENERAL OPTIONS
#______________________________________________________________________________________________________________________
#
read_from_library             = False
read_from_library:help        = Read configuration from configuration library files (placed under 'config' path), which 
                                includes all configurations marked with ':library'. See also option 'write_to_library'.

required_sections             = gnss_clean_orbit, gnss_clean_orbit_has, gnss_obs_priority, simulate

required_sections:add_sections
required_sections:option      = <gnss_clean_orbit, gnss_clean_orbit_has>
required_sections:help        = Add required sections to configuration setting. Following removers are automatically applied
                                and the configuration sections has to be added:
                                                               
                                 gnss_clean_orbit:  Clean GNSS observations by calculating GNSS brodcast orbit and clocks:
                                         - removing of GNSS observations if orbits are unavailable
                                         - removing of GNSS observations for satellites with unhealthy satellite status
                                         - removing of GNSS observations which exceeds the validity length of a broadcast
                                           navigation record
                                        THIS REMOVER IS APPLIED AUTOMATICALLY BY CALCULATING GNSS BROADCAST ORBIT AND 
                                        CLOCKS.
                                    
                                 gnss_clean_orbit_has:  Clean GNSS observations by calculating HAS corrections for 
                                        broadcast orbit and clocks:
                                         - removing of GNSS observations if HAS messages are unavailable
                                         - removing of GNSS observations with no corresponding IOD between HAS and broadcast 
                                           navigation message
                                         - removing of GNSS observations with timestamps less than HAS receiver reception
                                           time
                                         - removing of GNSS observations which exceeds the validity length of a Galileo HAS 
                                           record
                                        THIS REMOVER IS APPLIED AUTOMATICALLY BY CALCULATING HAS CORRECTIONS FOR BROADCAST 
                                        ORBIT AND CLOCKS.
                             
                                In addition 'gnss_obs_priority' section has to be added, which defines GNSS observation 
                                priority list. See more information under section 'gnss_obs_priority'.
                                  
skip_stages                   =
skip_stages:option            = <read, orbit, edit, postprocess, write>
skip_stages:help              = Define stages, which should be skipped.

stage_once                    = read, edit, postprocess, write
stage_once:option             = <read, orbit, edit, postprocess, write>
stage_once:help               = Define stages, which should be processed sequentially.

write_to_library              = False
write_to_library:help         = Write configuration library files for configuration options marked with ':library' to
                                'config' path. See also option 'read_from_library'.




#
# READ/EDIT OPTIONS
#______________________________________________________________________________________________________________________
#
convert_unit                  = False
convert_unit:option           = <True|False>
convert_unit:help             = Convert unit from carrier-phase and Doppler observation to meter. Exception: unit
                                conversion for GLONASS observations is not implemented.

filekey_suffix                = rinex_obs, gnss
filekey_suffix:option         = <name, ...>
filekey_suffix:help           = File key suffix priority list, whereby a file key suffix can be the pipeline name or
                                a defined profile name. The list of file key suffix should be a prioritized list
                                where the first file key listed will be used if available.

format                        = rinex
format:option                 = <android|rinex>
format:help                   = Define GNSS observation data format. Following formats are defined:
                                  android: Android raw data file format.
                                  rinex: RINEX observation format 2.11 or 3.03.

freq_type                     = dual
freq_type:option              = <single|dual|triple>
freq_type:help                = Define frequency solution for GNSS pipeline analysis:
                                 single: Single-frequency analysis.
                                 dual:   Dual-frequency analysis by using ionosphere-free linear combination for combining 
                                         observations.
                                 triple: NOT IMPLEMENTED

removers                      = gnss_select_obs
removers:add_sections
removers:option               =
removers:help                 = Define removers used in the analysis. Following removers can be optionally chosen:

                                 gnss_select_obs:  Select GNSS observations (Note: Options 'freq_type' and 'systems' has
                                        to be defined.). With this option the  GNSS observation file can be decimated to
                                        choosen frequency type (single, dual, triple), observation type (C1X, L1X, ...),
                                        GNSS ('G', 'E', ...) or use of only code observations or both code and phase 
                                        observations. Note, that the priority list is used for the selection of observation 
                                        types. THIS REMOVER IS APPLIED AUTOMATICALLY BY READING GNSS DATA.
                                   
                                 ignore_epochs: Ignore defined observation epoch intervals

                               Option 'removers:add_sections' is needed in addition. This option adds the removers
                               configuration sections to the used configuration. 

sampling_rate                 = 300
sampling_rate:option          = <number>
sampling_rate:help            = Sampling rate of GNSS data in seconds

stations                      = stas
stations:option               = <ssss, ...>
stations:help                 = Stations used in GNSS Where analysis indicated by 4-digit station identifiers. This option
                                is only needed by using 'where_runner'.

systems                       = E, G
systems:option                = <C,E,G,I,J,R>
systems:help                  = Define GNSS used in GNSS pipeline analysis from options:
                                 C: BeiDou
                                 E: Galileo
                                 G: GPS
                                 I: IRNSS
                                 J: QZSS
                                 R: GLONASS
                            
                                Note: This option is only relevant together with use of remover 'gnss_select_obs'.


#
# ORBIT OPTIONS
#______________________________________________________________________________________________________________________
#
apriori_orbit                   = broadcast
apriori_orbit:option            = <broadcast|precise>
apriori_orbit:help              = Define apriori orbit source, which can be:
                                    broadcast: Broadcast ephemeris given in RINEX navigation format 2.11 or 3.03, which
                                               are defined via file keys 'gnss_rinex_nav_<system>.
                                    precise:   Precise orbits given in SP3 format, which are defined via file keys
                                               'gnss_orbit_sp3' and 'gnss_rinex_clk'. See also option 'clock_product'.

brdc_block_nearest_to           = transmission_time:positive
brdc_block_nearest_to:option    = <toc|toc:positive|toe|toe:positive|transmission_time|transmission_time:positive>
brdc_block_nearest_to:help      = Define strategy to select broadcast ephemeris blocks. The strategy is related to one 
                                  of the time definitions in the broadcast ephemeris files, that means the navigation 
                                  epoch (time of clock (TOC)), the time of ephemeris (TOE) or the transmission time. 
                                  Following strategy options are available:
                                    toc  - Broadcast block for given observation epoch is selected nearest to
                                           navigation epoch (time of clock (TOC)).
                                    toe  - Broadcast block for given observation epoch is selected nearest to
                                           time of ephemeris (TOE).
                                    transmission_time  - Broadcast block for given observation epoch is selected
                                           nearest to transmission time.
                                  The suffix ':positive' can be added to the options like 'toe:positive'. In this case
                                  the difference between the observation epoch and TOE, TOC or transmission time has to
                                  be positive.

clock_product                   = clk
clock_product:option            = <clk|sp3>
clock_product:help              = Define clock product file for getting precise satellite clock corrections. Following
                                  options are defined: 
                                    clk: use RINEX clock format 1.0
                                    sp3: use SP3 format
                                  
                                  NOTE: SO FAR IS SP3 NOT HANDLED CORRECTLY DUE TO UNSPECIFIED SATELLITE CLOCK 
                                  CORRECTIONS AT THE END OF A SP3 FILE!!!!!!
                                  
has_message_nearest_to          = transmission_time:positive
has_message_nearest_to:option   = <tom|tom:positive|transmission_time|transmission_time:positive>
has_message_nearest_to:help     = Define strategy to select Galileo HAS messages. The strategy is related to one of
                                  the time definitions in the decoded Galileo HAS message files, that means the 
                                  reference time of HAS message (TOM) or the transmission time (receiver reception 
                                  time). Following strategy options are available:
                                    tom  - HAS message for given observation epoch is selected nearest to time of 
                                           message (TOM), which is reference time of HAS message.
                                    transmission_time  - HAS message for given observation epoch is selected
                                           nearest to transmission time, which is receiver reception time of HAS
                                           message.
                                  The suffix ':positive' can be added to the options like 'toe:positive'. In this case
                                  the difference between the observation epoch and TOM or transmission time has to be
                                  positive.                                  

navigation_message_type         = G:LNAV E:INAV
navigation_message_type:option  = <sys:type>
navigation_message_type:help    = Specify navigation message types (e.g. INAV message for Galileo like 'E:INAV'), which
                                  should be written in the final ephemeris file. Following message types are handled of
                                  Where for a specified GNSS:
                                    Galileo (E): FNAV, FNAV_E5a, INAV, INAV_E1, INAV_E1b, INAV_E1E5b
                                    GPS (G):     LNAV
                                  For Galileo navigation messages it should be noted, that the INAV and FNAV messages
                                  are delivered by different Galileo signals. INAV messages are provided with E1 and 
                                  E5b signal and FNAV messages with E5a signal. That means for the mentioned navigation
                                  messages above:
                                     FNAV        FNAV messages coming with E5a signal, which is the same as FNAV_E5a.
                                     INAV        Mixed INAV messages coming from E1 or E5b signal.
                                     INAV_E1     INAV messages coming with E1 signal
                                     INAV_E5b    INAV messages coming with E5b signal
                                     INAV_E1E5b  Merged INAV messages based on E1 and E5b signal
                                     
use_mixed_brdc_file             = True
use_mixed_brdc_file:option      = <True|False>
use_mixed_brdc_file:help        = Use mixed broadcast ephemeris file. The belonging file key is 'gnss_rinex_nav_M'
                                  in the files.conf file. Otherwise the broadcast ephemeris files defined under the 
                                  file keys 'gnss_rinex_nav_<system>', whereby <system> is related to the GNSS 
                                  identifiers 'E' (Galileo) and 'G' (GPS).


#
# POSTPROCESSORS
#______________________________________________________________________________________________________________________
#
postprocessors                = gnss_linear_combination
postprocessors:add_sections
postprocessors:option         = 
postprocessors:help           = Define postprocessors used in the analysis:

                                    gnss_linear_combination - Add defined GNSS linear observation combinations to dataset.
                                    gnss_epoch_by_epoch_difference   - Add epoch by epoch difference of observations to dataset
                                    rinex_obs_apply_has_correction - Apply Galileo HAS corrections to RINEX observations

                                Option 'postprocessors:add_sections' is needed in addition. This option adds the 
                                postprocessors configuration sections to the used configuration. 
                                

#
# OUTPUT
#______________________________________________________________________________________________________________________
#
files_to_publish         = 
files_to_publish:help    = List of file keys to publish. In the case of GNSS HAS SP3 analysis following files could be  
                           of interest for publishing:
                               'output_rinex3_obs'       - GNSS observations in RINEX format version 3.03
                               'output_rinex_obs_report' - Result of RINEX observation file analysis written to a report

output                   = rinex3_obs, rinex_obs_report

output:add_sections
output:option            = <name[:stage/label]>
output:help              = Define writers. Following writers can be used:
                             'rinex_obs_report'   - Write RINEX observation analysis report
                             'rinex3_obs'         - Write RINEX observations in RINEX format 3.03 

                           The dataset used for the output can be defined in addition by optionally adding 
                           the processing 'stage' and the 'label' (e.g. rinex3_obs:read/None). Option 
                           'output:add_sections' is needed in addition. This option adds the writer configuration 
                           sections to the used configuration. 



#
# REMOVERS (required - automatically called by Where)
#
#______________________________________________________________________________________________________________________
#

[gnss_clean_orbit]
:help   = Additional configuration for cleaning of GNSS observations by calculating GNSS orbit.          
check_nav_validity_length         = False
check_nav_validity_length:option  = <True|False>
check_nav_validity_length:help    = GNSS observations exceeding the validity length of broadcast navigation messages 
                                    are removed. Note, that this remover is only applied in combination with option 
                                    'apriori_orbit = broadcast'.
                                    
ignore_unhealthy_satellite        = False
ignore_unhealthy_satellite:option = <True|False>
ignore_unhealthy_satellite:help   = Ignore satellites, which are declared as unhealthy in broadcast ephemeris file. 
                                    Note, that this remover is only applied in combination with option 
                                    'apriori_orbit = broadcast'.


[gnss_clean_orbit_has]
:help   = Additional configuration for cleaning of GNSS observations by calculating GNSS orbit.
        
check_has_validity_length         = True
check_has_validity_length:option  = <True|False>
check_has_validity_length:help    = GNSS observations exceeding the validity length of HAS messages 
                                    are removed. Note, that this remover is only applied in combination with option 
                                    'apriori_orbit = broadcast' and 'apply_has_correction = True'.
                                    
                                   
#
# REMOVERS (optional)
#______________________________________________________________________________________________________________________
#
[elevation]
:help   = Define elevation cut-off angle to remove observations.
cut_off           = 5
cut_off:option    = <number>
cut_off:help      = Elevation cut-off angle in degree.

[gnss_pdop]
:help   = Remove observations, which exceeds the defined PDOP limit.
pdop_limit        = 6
pdop_limit:option = <number>
pdop_limit:help   = Definition of PDOP limit. 


[gnss_ignore_system]
:help   = Ignore GNSS, which are defined for rejection. 
systems                  =
systems:option           = <C, E, G, I, J, R, S> 
systems:help             = Choose GNSS which should be ignored by using one or a selection of following RINEX GNSS
                           identifiers:
                                 'C': BeiDou
                                 'E': Galileo
                                 'G': GPS
                                 'I': IRNSS
                                 'J': QZSS
                                 'R': GLONASS
                                 'S': SBAS

[gnss_select_obs]
:help   = Additional configuration by selection of GNSS observation by reading of GNSS data. 
obs_code           = code,phase,snr
obs_code:option    = <code, doppler, phase, snr>
obs_code:help      = Select observation code. Following observation codes can be chosen:
                       'code'    - Pseudo range (code) observations
                       'doppler' - Doppler observations
                       'phase'   - Carrier phase observations
                       'snr'     - Signal-to-noise ratio observations
                     The observation codes can also be combined by listing types, e.g. 'code, doppler'.

obs_types          = 
obs_types:option   = <type, ...>
obs_types:help     = Select observation types read from GNSS observation RINEX input files (e.g. C1C, C2P). If no 
                     observation type is given, than all observation types are used in the processing.

remove_nan         = True
remove_nan:option  = <True|False>
remove_nan:help    = Remove NaN (not a number) values from selected observation types. This is only done if NaN is set
                     for all GNSS observation types.
                     
[ignore_epochs]
:help   = Ignore defined observation epoch intervals
intervals          = 
intervals:option   = <station yyyy-mm-dd hh:mm:ss hh:mm:ss, ...>
intervals:help     = Define time intervals for a specified station, which should be excluded. For example for station
                     KRSS: krss 2021-06-17 00:00:00 2021-06-17 07:14:59, krss 2021-06-17 15:00:01 2021-06-17 23:59:59

time_scale         = gps
time_scale:option  = <gps, utc, ...>
time_scale:help    = Choose time scale used for defining the time intervals. 


[ignore_satellite]
:help  = Define satellites for which observations should be rejected.
satellites        =
satellites:option = <sys><number>
satellites:help   = Define satellites as comma separated PRN list for satellite observation, which should be rejected.
                    The GNSS <sys> is indicated via the letters like 'G' for GPS or 'E' for GALILEO (e.g. E14, G20). 
                    
                    
#
# POSTPROCESSORS
#______________________________________________________________________________________________________________________
#

[gnss_linear_combination]
linear_combination        = geometry_free, code_phase
linear_combination:option = <code_multipath, geometry_free, melbourne_wuebbena>
linear_combination:help   = Add defined GNSS linear observation combinations to dataset.


#
# WRITER 
#______________________________________________________________________________________________________________________
#

[rinex_obs_report]
add_to_report         = observation_overview, observation_availability, satellite_plot
add_to_report:option  = <name, ...>
add_to_report:help    = Define which sections should be added to RINEX observation analysis report. Following sections 
                        can be added:
                            observation_overview
                            obstype_availability
                            satellite_plot

fields_to_plot        = 
fields_to_plot:option = <field, ...>
fields_to_plot:help   = List of fields, which should be plotted.


#
# PRIORITY LIST
#______________________________________________________________________________________________________________________
#
[gnss_obs_priority]
:help   = The priority list is used for selection of GNSS observation types in Where analysis.

          A priority list is given for each GNSS, carrier phase, pseudorange, doppler and SNR observation type and 
          frequency, following the convention:

            <observation identifier> = <ordered observation types>

          The <observation identifier> definition follows the convention:

            <GNSS>_<L|C|D|S><freq>   (e.g. G_L1, E_D1)

          with
            GNSS     - GNSS constellation given by satellite system identifiers, which follows the RINEX convention 
                       (G-GPS, R-GLONASS, E-Galileo, C-BeiDou)
            L|C|D|S  - Carrier-phase, pseudorange, Doppler and SNR observation are indicated by L, C, D or S
            freq     - Frequency numbers representing single, dual or triple frequency selection. Frequency number and  
                       its meaning:
                         1           - observation types definition for single-frequency solution
                         1 and 2     - observation types definition for dual-frequency solution
                         1, 2 and 3  - observation types definition for triple-frequency solution

          The <ordered observation types> is the priority list given for a certain <observation identifier>. The  
          observation type defined in the priority list follow the RINEX 2.11 and 3.03 convention. Observation types 
          for RINEX 2.11 and 3.03 should be defined, because Where can read either RINEX files in RINEX format 2.11 or 
          3.03. The order of the priority list is important for selection of observation type for the Where analysis. 
          Following steps are carried out for the selection:

            1. Read RINEX observation files given in format 2.11 or 3.03.
            2. Get observation types given in RINEX observation file.
            3. Select observation types given in RINEX file depending on configuration (e.g. single- or dual-frequency; 
               code or both code and carrier phase observation) and priority list for further Where analysis. Hereby 
               the first observation type in the priority list, which matches the given RINEX observation types, is 
               selected for the Where analysis.

          EXAMPLE:

            Priority list:
                    G_L1    =  L1, L1P, L1C, L1W, L1X
                    G_L2    =  L2, L2P, L2C, L2D, L2S, L2W, L2X
                    G_L3    =  L5, L5Q, L5X
                    G_C1    =  P1,  C1, C1P, C1C, C1W, C1X
                    G_C2    =  P2,  C2, C2P, C2C, C2D, C2S, C2L, C2W, C2X
                    G_C3    =  C5, C5Q, C5X
   
            The RINEX file is given in RINEX format 2.11 with following GPS observation types C1, C2, C5, P1, P2, L1, 
            L2 and L5. If the configuration options <freq_type = dual> and <obs_code = code,phase> are used, then from 
            the observation identifiers G_L1, G_L2, G_C1 and G_C2 the observation types L1, L2, P1 and P2 are selected 
            for the Where analysis. If the configuration options <freq_type = single> and <obs_code = code> are used,  
            then from the observation code G_C1 the observation type P1 is selected for the Where analysis.
            
# GPS
G_C1    =  C1,  P1, C1C, C1P, C1W, C1X
G_L1    =  L1, L1P, L1C, L1W, L1X
G_D1    =  D1, D1C, D1P, D1W, D1X
G_S1    =  S1, S1C, S1P, S1W, S1X
G_C2    =  P2,  C2, C2P, C2C, C2D, C2S, C2L, C2W, C2X
G_L2    =  L2, L2P, L2C, L2D, L2S, L2W, L2X
G_D2    =  D2, D2P, D2C, D2D, D2S, D2L, D2W, D2X
G_S2    =  S2, S2P, S2C, S2D, S2S, S2L, S2W, S2X
G_C3    =  C5, C5Q, C5X
G_L3    =  L5, L5Q, L5X
G_D3    =  D5, D5Q, D5X
G_S3    =  S5, S5Q, S5X

# GLONASS
R_C1    =  P1,  C1, C1P, C1C, C1X
R_L1    =  L1, L1P, L1C, L1X
R_D1    =  D1, D1P, D1C, D1X
R_S1    =  S1, S1P, S1C, S1X
R_C2    =  P2,  C2, C2P, C2C, C2X
R_L2    =  L2, L2P, L2C, L2X
R_D2    =  D2, D2P, D2C, D2X
R_S2    =  S2, S2P, S2C, S2X

# Galileo
E_C1    =  C1, C1C, C1X
E_L1    =  L1, L1C, L1X
E_D1    =  D1, D1C, D1X
E_S1    =  S1, S1C, S1X
E_C2    =  C7, C7Q, C7X,  C5, C5Q, C5X  
E_L2    =  L7, L7Q, L7X,  L5, L5Q, L5X  
E_D2    =  D7, D7Q, D7X,  D2, D5Q, D5X  
E_S2    =  S7, S7Q, S7X   S2, S5Q, S5X
E_C3    =  C8, C8Q, C8X
E_L3    =  L8, L8Q, L8X
E_D3    =  D8, D8Q, D8X
E_S3    =  S8, S8Q, S8X

# BeiDou
C_C1    =  C1, C1I, C1X,  C2, C2I, C2X
C_L1    =  L1, L1I, L1X,  L2, L2I, L2X
C_D1    =  D1, D1I, D1X,  D2, D2I, D2X
C_S1    =  S1, S1I, S1X,  S2, S2I, S2X
C_C2    =  C7, C7I, C7X
C_L2    =  L7, L7I, L7X
C_D2    =  D7, D7I, D7X
C_S2    =  S7, S7I, S7X
C_C3    =  C6, C6I, C6X
C_L3    =  L6, L6I, L6X
C_D3    =  D6, D6I, D6X
C_S3    =  S6, S6I, S6X


#
# PROFILES
#______________________________________________________________________________________________________________________
#

# Galileo HAS Profile
#____________________________________________________
[rinex_obs__has]
files_to_publish               = output_rinex3_obs
has_message_nearest_to         = transmission_time:positive
output                         = rinex3_obs
output:add_sections
postprocessors                 = rinex_obs_apply_has_correction
postprocessors:add_sections
removers                       = gnss_ignore_system
removers:add_sections
stage_once                     = read, edit, postprocess, write
systems                        = E,G

[gnss_ignore_system__has]
systems                        = C, I, J, R, S

[gnss_clean_orbit_has__has]
check_has_validity_length      = True






#######################################################################################################################
#
# GNSS SIMULATION
#
# IDENTIFIER        OPTIONS               DESCRIPTION
#______________________________________________________________________________________________________________________
[simulate]
sampling_rate = 300
satellites    = G01 G02 G03 G04 G05 G06 G07 G08 G09 G10 G11 G12 G13 G14 G15 G16 G17 G18 G19 G20 G21 G22 G23
                G24 G25 G26 G27 G28 G29 G30 G31 G32
                E01 E02 E03 E04 E05 E07 E08 E09 E11 E13 E12 E14 E15 E18 E19 E20 E21 E22 E24 E25 E26 E27 E30
                E31 E33 E36
                #R01 R02 R03 R04 R05 R06 R07 R08 R09 R10 R11 R12 R13 R14 R15 R16 R17 R18 R19 R20 R21 R22 R23
                #R24
                #C01 C02 C03 C04 C05 C06 C07 C08 C09 C10 C11 C12 C13 C14 C15 C30 C31 C32 C33 C34 C35
systems       = E
site_pos      = 3348186.1150, 465040.8615, 5390738.0919
