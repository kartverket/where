# This is the WHERE configuration file for the VLBI pipeline. It is read and handled by the where.config module, and
# further documentation can be found there.

# For VGOS the ionosphere has already been corrected for and should not be applied.
[vlbi__vgos]
delay                       = vlbi_vacuum_delay, troposphere_radio, vlbi_cable_cal,
                              vlbi_axis_offset, vlbi_therm_deform, vlbi_grav_delay, vlbi_geometric_delay,
delay:add_sections

removers                    = vlbi_data_quality, elevation, ignore_station, ignore_epochs,
                              vlbi_ignore_baseline, vlbi_ignore_source, ignore_observation, vlbi_ignore_nan
removers:add_sections       = removers



# Do not apply non-tidal atmospheric loading for ITRF2020
[vlbi__itrf2020b]
site                        = ocean_tides, solid_tides, solid_ptides, ocean_ptides, atm_tides,
                              eccentricity
site:add_sections

# 2023b: yearly ITRF updates without non-tidal atm loading
[vlbi__2023b]
site                        = ocean_tides, solid_tides, solid_ptides, ocean_ptides, atm_tides,
                              eccentricity
site:add_sections

[vlbi]
# TODO??
#sections                    = eop
#sections:add_sections
skip_stages                 =
filekey_suffix              = vlbi
arc_length                  = 1
web_map                     = False
plot_map                    = True
# Input
obs_format                  = vgosdb
get_session_from_master     = True

# Apriori
ocean_tides                 = tpxo7.2_no_cmc
ocean_tides_cmc             = False
atmospheric_tides_cmc       = False
celestial_reference_frames  = icrf3:sx, vlbi_obs
reference_frames            = itrf:2020, vtrf, custom, vlbi_obs
eop_remove_leap_seconds     = True

# Editors and removers
editors                     = analysis_status, vlbi_cable_calibration, vlbi_meteorological_data, vlbi_scheduled_obs
editors:add_sections
removers                    = vlbi_data_quality, vlbi_iono_quality, elevation, ignore_station, ignore_epochs,
                              vlbi_ignore_baseline, vlbi_ignore_source, ignore_observation, vlbi_ignore_nan
removers:add_sections       = removers

# Calculate theoretical delay
calculate_max_iterations    = 10
calculate_outlier_limit     = 8
calculate_outlier_limit:library
calculate_outlier_limit:help= discard obs if calculate residual > calculate_outlier_limit * root mean square of residuals
store_outliers              = True
store_outliers:help         = Observations marked as outliers based on 'rms * calculate_outlier_limit' are added to the ignore_observation block
site                        = ocean_tides, solid_tides, solid_ptides, ocean_ptides, atm_tides,
                              eccentricity, nt_atm_loading
#site:add_sections           = model # TODO namespace on sections?
site:add_sections
delay                       = vlbi_vacuum_delay, troposphere_radio, vlbi_ionosphere, vlbi_cable_cal,
                              vlbi_axis_offset, vlbi_therm_deform, vlbi_grav_delay, vlbi_geometric_delay,
                              vlbi_grav_deform
#delay:add_sections          = model # TODO namespace on sections?
delay:add_sections
delay_corr                  = vlbi_clock_poly
delay_corr:add_sections

detect_clockbreaks          = False
detect_clockbreaks:help     = Attempt to automatically detect clock breaks during analysis?
detect_clockbreaks:wizard

# Parameters to estimate
estimate_max_iterations     = 2
estimate_outlier_limit      = 3
estimate_outlier_limit:help = discard obs if estimate residual > estimate_outlier_limit * root mean square of residuals
estimate_method             = cpwl
estimate_constraint         =
#estimate_constraint         = minimum_trf, minimum_crf
estimate_constraint:add_sections
estimate_stochastic         = trop_wet, trop_grad, vlbi_clock
estimate_stochastic:add_sections
estimate_constant           = vlbi_site_pos, vlbi_eop_nut, vlbi_eop_pm, vlbi_eop_pm_rate, vlbi_eop_dut1,
                              vlbi_eop_lod, vlbi_src_dir
estimate_constant:add_sections
estimate_constant:help      = Parameters to estimate as constant
estimate_constant:type      = List[enum[...]]

estimate_obs_rejectors      = rms, vlbi_obs_per_station, vlbi_obs_per_source
estimate_obs_rejectors:help = Which algorithms to use to discard observations between iterations
estimate_obs_rejectors:add_sections
estimate_obs_rejectors_independent = False
estimate_obs_rejectors_independent:help = Flag to indicate whether the rejectors are applied independently or sequentially

neq_constraints             = minimum_trf, minimum_crf
neq_constraints:help        = Constraints added to normal equation system when solving the equations. 
neq_constraints:add_sections

# Post processing
postprocessors              = vlbi_network_volume, vlbi_baseline_length
postprocessors:add_sections

# Output
output                      = vlbi_baseline_stats, parameter_corrections, sinex, timeseries
output:add_sections
files_to_publish            = output_sinex
files_to_publish:help       = List of file keys to publish

[vlbi_nyales_test]
estimate_obs_rejectors      = random, rms, vlbi_obs_per_station, vlbi_obs_per_source

[vlbi__mastertest]
filekey_suffix = vlbi, mastertest

[vlbi__eop_test]
eop_interpolation_method    = linear
eop_interpolation_window    = 2
eop_cpo_model               = empirical_2020
estimate_constant           = vlbi_site_pos, vlbi_eop_pm, vlbi_eop_dut1
estimate_constant:add_sections

[vlbi__cplo_trop]
estimate_stochastic         = trop_grad, vlbi_clock
estimate_stochastic:add_sections
estimate_constant           = trop_wet, vlbi_site_pos, vlbi_eop_nut, vlbi_eop_pm, vlbi_eop_pm_rate, vlbi_eop_dut1,
                              vlbi_eop_lod, vlbi_src_dir
estimate_constant:add_sections

[runner]
session_types               =
session_list                =
skip_intensives             = True
check_master_status         = False

[runner__intensives]
skip_intensives             = False

# Profile: Intensives
[vlbi__intensives]
filekey_suffix              = intensives, vlbi
estimate_stochastic         =
estimate_stochastic:add_sections
estimate_constant           = trop_wet, vlbi_eop_dut1
estimate_constant:add_sections
estimate_obs_rejectors      = rms

[vlbi__intensives2]
filekey_suffix              = intensives, vlbi
estimate_stochastic         = trop_wet
estimate_stochastic:add_sections
estimate_constant           = vlbi_eop_dut1
estimate_constant:add_sections
estimate_obs_rejectors      = rms

[trop_wet__intensives2]
knot_interval               = 86400


# Profile: VASCC
[vlbi__vascc]
filekey_suffix              = vascc, vlbi
sessions                    = NH, SH
arc_length                  = 16
obs_format                  = vgosdb
skip_stages                 = estimate
ocean_tides                 = vascc_ocean_loading_FES2004
delay                       = vlbi_vacuum_delay, troposphere_radio, vlbi_axis_offset, vlbi_thermal_deformation,
                              vlbi_grav_delay, vlbi_geometric_delay
delay:add_sections
delay_corr                  =
site                        = ocean_tides, solid_tides, solid_pole_tides, ocean_pole_tides
eop_models                  = ortho_eop, pmsdnut2, utlibr
estimate_method             =
estimate_constraint         =
estimate_stochastic         =
estimate_constant           =
output                      = vlbi_vascc_calc
mean_pole_version           = 2010
reference_frames            = vascc
celestial_reference_frames  = vascc

[troposphere_radio]
mapping_function            = vmf1_gridded, gmf
meteorological_data         = site_pressure, vmf1_station, vmf1_gridded, default
zenith_hydrostatic_delay    = saastamoinen
zenith_wet_delay            = vmf1_gridded, none
gradients                   = apg, none

# Use VMF1 station files for ITRF2020 since these go back to 1979
[troposphere_radio__itrf2020b]
mapping_function            = vmf1_station
meteorological_data         = site_pressure
zenith_hydrostatic_delay    = saastamoinen
zenith_wet_delay            = vmf1_station
gradients                   = apg

[troposphere_radio__vascc]
mapping_function            = gmf
gradients                   = none
meteorological_data         = site_pressure

[elevation__vascc]
cut_off                     = 0


######################################################################
#
# EDITORS
#
[analysis_status]
status                      = unchecked
status:library


######################################################################
#
# REMOVERS
#
[vlbi_data_quality]
threshold                   = 0
threshold:help              = Observations with quality value higher than threshold will be removed

[vlbi_iono_quality]
threshold                   = 0
threshold:help              = Observations with ionosphere quality value lower than threshold will be removed

[elevation]
cut_off                     = 0
cut_off:help                = Observation below cut-off angle will be removed
cut_off:type                = float(min=0, max=90)
cut_off:unit                = degrees

[ignore_station]
stations                    =
stations:library

[ignore_epochs]
intervals                   =
intervals:library
time_scale                  = utc

[ignore_observation]
observations                =
observations:library

[vlbi_ignore_baseline]
baselines                   =
baselines:library

[vlbi_ignore_source]
sources                     =
sources:library


######################################################################
#
# MODELS
#
# Clock correction specification
[vlbi_clock_poly]
order_of_polynomial          = 2
baseline_clock_offsets       = 
baseline_clock_offsets:library
baseline_clock_offsets:help  = list of baselines to estimate clock offsets for
bco_limit                    = 3
bco_limit:help               = estimate bco if baseline mean value > bco_limit * root mean square of residuals
clock_breaks                 =
clock_breaks:library
reference_clock              =
reference_clock:library
store_bco                    = True
store_bco:help               = whether to store the automatically determined baseline clock offsets in the configuration file



# Cable calibration
[vlbi_cable_calibration]
ignore_cable                =
ignore_cable:library

[vlbi_meteorological_data]
ignore_pressure             =
ignore_pressure:library
ignore_pressure:help        = list of station names with bad pressure data
ignore_temperature          =
ignore_temperature:library
ignore_temperature:help     = list of station names with bad temperature data


[eccentricity]
identifier = station, site_id
######################################################################
#
# PARAMETERS USED IN ESTIMATION
#

# Clock estimate
[vlbi_clock]
skip_stations               =
skip_stations:library
skip_stations:help          = comma separated list of station names to skip clock parameter
epoch                       = 
epoch:help                  = Estimation epoch for parameters estimated as pwlo. Only applicable for parameters defined in 
                              estimate_constant. Format: HH:MM:SS
knot_interval               = 3600
knot_interval:library
knot_interval:help          = Number of seconds for each knot interval for parameters in (1) estimate_stochastic if estimator 
                              'cpwl' ( piecewise linear) is used or (2) estimate_constant if epoch is defined
                              (meaning the parameters are estimated as pwlo (piecewise linear offsets). Unit is 
                              defined via estimation option 'unit'.
process_noise               = 100
apriori_stdev               = 1
apriori_rate_stdev          = 1
unit                        = m
display_unit                = meter
neq_abs_constraint          = False
neq_abs_constraint:help     = Whether to apply absolute constraints to the parameter when solving the normal equation to obtain
                              an estimate. The constraint will be applied to all parameters in this sections.
neq_abs_constraint_weight   = 1e-3
neq_abs_constraint_weight:help = The sigma value used in the application of the absolute constraint (if it is applied).
                                 Absolute constraints may be applied automatically for some subparameters if there are too
                                 few observations to estimate the parameter (even if the flag is set to False). Unit
								 is defined by "unit".
neq_rate_constraint          = False
neq_rate_constraint:help     = Whether to apply rate constraints to the parameter when solving the normal equation to 
							   obtain an estimate. Only makes sense to apply when the parameter is estimated as pwlo. 
							   The constraint will be applied to all parameters in this sections. If
							   the parameters are not a part of the normal equation, this constraint will be ignored.
neq_rate_constraint_weight   = 1
neq_rate_constraint_weight:help = The sigma value used in the application of the rate constraint (if it is applied).
                                  Unit is defined by "unit" per hour. TODO: verify default value.
[vlbi_clock__vgos]
knot_interal                 = 1800

[vlbi_eop_pm]
epoch                       = 
epoch:help                  = Estimation epoch for parameters estimated as pwlo. Only applicable for parameters defined in 
                              estimate_constant. Format: HH:MM:SS
knot_interval               =
knot_interval:help          = Number of seconds for each knot interval for parameters in (1) estimate_stochastic if estimator 
                              'cpwl' (continuous piecewise linear) is used or (2) estimate_constant if epoch is defined
                              (meaning the parameters are estimated as pwlo (piecewise linear offsets). Unit is 
                              defined via estimation option 'unit'.
process_noise               =
apriori_stdev               = 100
apriori_rate_stdev          =
unit                        = mas
display_unit                = milliarcsecond
neq_abs_constraint          = False
neq_abs_constraint:help     = Whether to apply absolute constraints to the parameter when solving the normal equation to obtain
                              an estimate. The constraint will be applied to all parameters in this sections.
neq_abs_constraint_weight   = 1e-3
neq_abs_constraint_weight:help = The sigma value used in the application of the absolute constraint (if it is applied).
                                 Absolute constraints may be applied automatically for some subparameters if there are too
                                 few observations to estimate the parameter (even if the flag is set to False). Unit
								 is defined by "unit".
neq_rate_constraint          = False
neq_rate_constraint:help     = Whether to apply rate constraints to the parameter when solving the normal equation to 
							   obtain an estimate. Only makes sense to apply when the parameter is estimated as pwlo. 
							   The constraint will be applied to all parameters in this sections. If
							   the parameters are not a part of the normal equation, this constraint will be ignored.
neq_rate_constraint_weight   = 1
neq_rate_constraint_weight:help = The sigma value used in the application of the rate constraint (if it is applied).
                                  Unit is defined by "unit" per hour. TODO: verify default value.

# Polar motion estimate
[vlbi_eop_pm__eop_test]
epoch                       = 00:00:00
knot_interval               = 21600


[vlbi_eop_pm_rate]
epoch                       =
epoch:help                  = Estimation epoch for parameters estimated as pwlo. Only applicable for parameters defined in 
                              estimate_constant. Format: HH:MM:SS
knot_interval               =
knot_interval:help          = Number of seconds for each knot interval for parameters in (1) estimate_stochastic if estimator 
                              'cpwl' (continuous piecewise linear) is used or (2) estimate_constant if epoch is defined
                              (meaning the parameters are estimated as pwlo (piecewise linear offsets). Unit is 
                              defined via estimation option 'unit'.
process_noise               =
apriori_stdev               = 100
apriori_rate_stdev          =
unit                        = masD
display_unit                = milliarcsecond per day
neq_abs_constraint          = False
neq_abs_constraint:help     = Whether to apply absolute constraints to the parameter when solving the normal equation to obtain
                              an estimate. The constraint will be applied to all parameters in this sections.
neq_abs_constraint_weight   = 1e-3
neq_abs_constraint_weight:help = The sigma value used in the application of the absolute constraint (if it is applied).
                                 Absolute constraints may be applied automatically for some subparameters if there are too
                                 few observations to estimate the parameter (even if the flag is set to False). Unit
								 is defined by "unit".
neq_rate_constraint          = False
neq_rate_constraint:help     = Whether to apply rate constraints to the parameter when solving the normal equation to 
							   obtain an estimate. Only makes sense to apply when the parameter is estimated as pwlo. 
							   The constraint will be applied to all parameters in this sections. If
							   the parameters are not a part of the normal equation, this constraint will be ignored.
neq_rate_constraint_weight   = 1
neq_rate_constraint_weight:help = The sigma value used in the application of the rate constraint (if it is applied).
                                  Unit is defined by "unit" per hour. TODO: verify default value.

# Celestial pole offset
[vlbi_eop_nut]
epoch                       =
epoch:help                  = Estimation epoch for parameters estimated as pwlo. Only applicable for parameters defined in 
                              estimate_constant. Format: HH:MM:SS
knot_interval               =
knot_interval:help          = Number of seconds for each knot interval for parameters in (1) estimate_stochastic if estimator 
                              'cpwl' (continuous piecewise linear) is used or (2) estimate_constant if epoch is defined
                              (meaning the parameters are estimated as pwlo (piecewise linear offsets). Unit is 
                              defined via estimation option 'unit'.
process_noise               =
apriori_stdev               = 100
apriori_rate_stdev          =
unit                        = mas
display_unit                = milliarcsecond
neq_abs_constraint          = False
neq_abs_constraint:help     = Whether to apply absolute constraints to the parameter when solving the normal equation to obtain
                              an estimate. The constraint will be applied to all parameters in this sections.
neq_abs_constraint_weight   = 1e-3
neq_abs_constraint_weight:help = The sigma value used in the application of the absolute constraint (if it is applied).
                                 Absolute constraints may be applied automatically for some subparameters if there are too
                                 few observations to estimate the parameter (even if the flag is set to False). Unit
								 is defined by "unit".
neq_rate_constraint          = False
neq_rate_constraint:help     = Whether to apply rate constraints to the parameter when solving the normal equation to 
							   obtain an estimate. Only makes sense to apply when the parameter is estimated as pwlo. 
							   The constraint will be applied to all parameters in this sections. If
							   the parameters are not a part of the normal equation, this constraint will be ignored.
neq_rate_constraint_weight   = 1
neq_rate_constraint_weight:help = The sigma value used in the application of the rate constraint (if it is applied).
                                  Unit is defined by "unit" per hour. TODO: verify default value.

[vlbi_eop_nut__eop_test]
neq_abs_constraint          = True

# UT1 estimate
[vlbi_eop_dut1__eop_test]
epoch                       = 00:00:00
knot_interval               = 21600


[trop_grad]
:help   =  Configuration for estimating troposphere gradients.

apriori_rate_stdev      = 1
apriori_rate_stdev:help = Apriori standard deviation of parameter rate used to initialize predicted state vector 
                          covariance. Only relevant if option 'estimate_method' is set to 'cpwl'. Unit is defined via
                          estimation option 'unit'.

apriori_stdev           = 1
apriori_stdev:help      = Apriori standard deviation of parameter used to initialize predicted state. Unit is defined 
                          via estimation option 'unit'.

display_unit            = meter
display_unit:help       = Unit used to display in There.

epoch                   =
epoch:help              = Estimation epoch for parameters estimated as pwlo. Only applicable for parameters defined in 
                          estimate_constant. Format: HH:MM:SS
                          
knot_interval           = 21600
knot_interval:library
knot_interval:help      = Number of seconds for each knot interval for parameters in (1) estimate_stochastic if estimator 
                          'cpwl' (continuous piecewise linear) is used or (2) estimate_constant if epoch is defined
                          (meaning the parameters are estimated as pwlo (piecewise linear offsets). Unit is 
                          defined via estimation option 'unit'.

process_noise           = 100
process_noise:help      = Define parameter process noise Kalman filter. Unit is defined via estimation option 'unit'.

skip_stations           =
skip_stations:library
skip_stations:help      = Comma separated list of station names, for which estimation of station related parameters
                          is skipped like tropospheric gradients.

unit                    = m
unit:help               = Unit definition used as unit for other estimation options.
neq_rate_constraint          = False
neq_rate_constraint:help     = Whether to apply rate constraints to the parameter when solving the normal equation to 
							   obtain an estimate. Only makes sense to apply when the parameter is estimated as pwlo. 
							   The constraint will be applied to all parameters in this sections. If
							   the parameters are not a part of the normal equation, this constraint will be ignored.
neq_rate_constraint_weight   = 1
neq_rate_constraint_weight:help = The sigma value used in the application of the rate constraint (if it is applied).
                                  Unit is defined by "unit" per hour. TODO: verify default value.
                                              
[trop_wet]
:help   = Configuration for estimating troposphere wet delay.

apriori_rate_stdev    = 1
apriori_stdev         = 1
display_unit          = meter
epoch                 =
epoch:help            = Estimation epoch for parameters estimated as pwlo. Only applicable for parameters defined in 
                        estimate_constant. 
knot_interval         = 3600
knot_interval:library
knot_interval:help      = Number of seconds for each knot interval for parameters in (1) estimate_stochastic if estimator 
                          'cpwl' (continuous piecewise linear) is used or (2) estimate_constant if epoch is defined
                          (meaning the parameters are estimated as pwlo (piecewise linear offsets). Unit is 
                          defined via estimation option 'unit'.
process_noise         = 100
skip_stations         =
skip_stations:library
unit                  = m
neq_rate_constraint          = False
neq_rate_constraint:help     = Whether to apply rate constraints to the parameter when solving the normal equation to 
							   obtain an estimate. Only makes sense to apply when the parameter is estimated as pwlo. 
							   The constraint will be applied to all parameters in this sections. If
							   the parameters are not a part of the normal equation, this constraint will be ignored.
neq_rate_constraint_weight   = 0.01
neq_rate_constraint_weight:help = The sigma value used in the application of the rate constraint (if it is applied).
                                  Unit is defined by "unit" per hour. TODO: verify default value.


[trop_wet__cplo_trop]
epoch                       = 00:00:00
knot_interval               = 1200

[vlbi_eop_dut1]
epoch                       =
epoch:help                  = Estimation epoch for parameters estimated as pwlo. Only applicable for parameters defined in 
                              estimate_constant. Format: HH:MM:SS
knot_interval               =
knot_interval:help          = Number of seconds for each knot interval for parameters in (1) estimate_stochastic if estimator 
                              'cpwl' (continuous piecewise linear) is used or (2) estimate_constant if epoch is defined
                              (meaning the parameters are estimated as pwlo (piecewise linear offsets). Unit is 
                              defined via estimation option 'unit'.
process_noise               =
apriori_stdev               = 10
apriori_rate_stdev          =
unit                        = ms
display_unit                = millisecond
neq_abs_constraint          = False
neq_abs_constraint:help     = Whether to apply absolute constraints to the parameter when solving the normal equation to obtain
                              an estimate. The constraint will be applied to all parameters in this sections.
neq_abs_constraint_weight   = 1e-3
neq_abs_constraint_weight:help = The sigma value used in the application of the absolute constraint (if it is applied).
                                 Absolute constraints may be applied automatically for some subparameters if there are too
                                 few observations to estimate the parameter (even if the flag is set to False). Unit
								 is defined by "unit".
neq_rate_constraint          = False
neq_rate_constraint:help     = Whether to apply rate constraints to the parameter when solving the normal equation to 
							   obtain an estimate. Only makes sense to apply when the parameter is estimated as pwlo. 
							   The constraint will be applied to all parameters in this sections. If
							   the parameters are not a part of the normal equation, this constraint will be ignored.
neq_rate_constraint_weight   = 1
neq_rate_constraint_weight:help = The sigma value used in the application of the rate constraint (if it is applied).
                                  Unit is defined by "unit" per hour. TODO: verify default value.

[vlbi_eop_dut1_rate]
epoch                       =
epoch:help                  = Estimation epoch for parameters estimated as pwlo. Only applicable for parameters defined in 
                              estimate_constant. Format: HH:MM:SS
knot_interval               =
knot_interval:help          = Number of seconds for each knot interval for parameters in (1) estimate_stochastic if estimator 
                              'cpwl' (continuous piecewise linear) is used or (2) estimate_constant if epoch is defined
                              (meaning the parameters are estimated as pwlo (piecewise linear offsets). Unit is 
                              defined via estimation option 'unit'.
process_noise               =
apriori_stdev               = 10
apriori_rate_stdev          =
unit                        = millisec per day
display_unit                = millisec per day
neq_abs_constraint          = False
neq_abs_constraint:help     = Whether to apply absolute constraints to the parameter when solving the normal equation to obtain
                              an estimate. The constraint will be applied to all parameters in this sections.
neq_abs_constraint_weight   = 1e-3
neq_abs_constraint_weight:help = The sigma value used in the application of the absolute constraint (if it is applied).
                                 Absolute constraints may be applied automatically for some subparameters if there are too
                                 few observations to estimate the parameter (even if the flag is set to False). Unit
								 is defined by "unit".
neq_rate_constraint          = False
neq_rate_constraint:help     = Whether to apply rate constraints to the parameter when solving the normal equation to 
							   obtain an estimate. Only makes sense to apply when the parameter is estimated as pwlo. 
							   The constraint will be applied to all parameters in this sections. If
							   the parameters are not a part of the normal equation, this constraint will be ignored.
neq_rate_constraint_weight   = 1
neq_rate_constraint_weight:help = The sigma value used in the application of the rate constraint (if it is applied).
                                  Unit is defined by "unit" per hour. TODO: verify default value.

[vlbi_eop_lod]
epoch                       =
epoch:help                  = Estimation epoch for parameters estimated as pwlo. Only applicable for parameters defined in 
                              estimate_constant. Format: HH:MM:SS
knot_interval               =
knot_interval:help          = Number of seconds for each knot interval for parameters in (1) estimate_stochastic if estimator 
                              'cpwl' (continuous piecewise linear) is used or (2) estimate_constant if epoch is defined
                              (meaning the parameters are estimated as pwlo (piecewise linear offsets). Unit is 
                              defined via estimation option 'unit'.
process_noise               =
apriori_stdev               = 10
apriori_rate_stdev          =
unit                        = ms
display_unit                = millisecond
neq_abs_constraint          = False
neq_abs_constraint:help     = Whether to apply absolute constraints to the parameter when solving the normal equation to obtain
                              an estimate. The constraint will be applied to all parameters in this sections.
neq_abs_constraint_weight   = 1e-3
neq_abs_constraint_weight:help = The sigma value used in the application of the absolute constraint (if it is applied).
                                 Absolute constraints may be applied automatically for some subparameters if there are too
                                 few observations to estimate the parameter (even if the flag is set to False). Unit
								 is defined by "unit".
neq_rate_constraint          = False
neq_rate_constraint:help     = Whether to apply rate constraints to the parameter when solving the normal equation to 
							   obtain an estimate. Only makes sense to apply when the parameter is estimated as pwlo. 
							   The constraint will be applied to all parameters in this sections. If
							   the parameters are not a part of the normal equation, this constraint will be ignored.
neq_rate_constraint_weight   = 1
neq_rate_constraint_weight:help = The sigma value used in the application of the rate constraint (if it is applied).
                                  Unit is defined by "unit" per hour. TODO: verify default value.

# Radio sources
# Some radio sources may be fixed. Valid options: defining, special, vcs, non_vsc, undefined, or iers-name of source(s)
[vlbi_src_dir]
fix_sources                 =
fix_sources:library
fix_sources:help            = comma separated list of name of sources or group of sources to keep fixed
except_sources              =
except_sources:library
epoch                       =
epoch:help                  = Estimation epoch for parameters estimated as pwlo. Only applicable for parameters defined in 
                              estimate_constant. Format: HH:MM:SS
knot_interval               =
knot_interval:help          = Number of seconds for each knot interval for parameters in (1) estimate_stochastic if estimator 
                              'cpwl' (continuous piecewise linear) is used or (2) estimate_constant if epoch is defined
                              (meaning the parameters are estimated as pwlo (piecewise linear offsets). Unit is 
                              defined via estimation option 'unit'.
process_noise               =
apriori_stdev               = 2.5e-7
apriori_rate_stdev          =
unit                        = rad
display_unit                = milliarcsec
neq_abs_constraint          = False
neq_abs_constraint:help     = Whether to apply absolute constraints to the parameter when solving the normal equation to obtain
                              an estimate. The constraint will be applied to all parameters in this sections.
neq_abs_constraint_weight   = 1e-12
neq_abs_constraint_weight:help = The sigma value used in the application of the absolute constraint (if it is applied).
                                 Absolute constraints may be applied automatically for some subparameters if there are too
                                 few observations to estimate the parameter (even if the flag is set to False). Unit
								 is defined by "unit".
neq_rate_constraint          = False
neq_rate_constraint:help     = Whether to apply rate constraints to the parameter when solving the normal equation to 
							   obtain an estimate. Only makes sense to apply when the parameter is estimated as pwlo. 
							   The constraint will be applied to all parameters in this sections. If
							   the parameters are not a part of the normal equation, this constraint will be ignored.
neq_rate_constraint_weight   = 1
neq_rate_constraint_weight:help = The sigma value used in the application of the rate constraint (if it is applied).
                                  Unit is defined by "unit" per hour. TODO: verify default value.

# Station positions
[vlbi_site_pos]
fix_stations                =
fix_stations:library
fix_stations:help           = comma separated list of name of stations to keep fixed 
epoch                       =
epoch:help                  = Estimation epoch for parameters estimated as pwlo. Only applicable for parameters defined in 
                              estimate_constant. Format: HH:MM:SS
knot_interval               =
knot_interval:help          = Number of seconds for each knot interval for parameters in (1) estimate_stochastic if estimator 
                              'cpwl' (continuous piecewise linear) is used or (2) estimate_constant if epoch is defined
                              (meaning the parameters are estimated as pwlo (piecewise linear offsets). Unit is 
                              defined via estimation option 'unit'.
process_noise               =
apriori_stdev               = 1
apriori_rate_stdev          =
unit                        = m
display_unit                = meter
neq_abs_constraint          = False
neq_abs_constraint:help     = Whether to apply absolute constraints to the parameter when solving the normal equation to obtain
                              an estimate. The constraint will be applied to all parameters in this sections.
neq_abs_constraint_weight   = 1e-6
neq_abs_constraint_weight:help = The sigma value used in the application of the absolute constraint (if it is applied).
                                 Absolute constraints may be applied automatically for some subparameters if there are too
                                 few observations to estimate the parameter (even if the flag is set to False). Unit
								 is defined by "unit".
neq_rate_constraint          = False
neq_rate_constraint:help     = Whether to apply rate constraints to the parameter when solving the normal equation to 
							   obtain an estimate. Only makes sense to apply when the parameter is estimated as pwlo. 
							   The constraint will be applied to all parameters in this sections. If
							   the parameters are not a part of the normal equation, this constraint will be ignored.
neq_rate_constraint_weight   = 1
neq_rate_constraint_weight:help = The sigma value used in the application of the rate constraint (if it is applied).
                                  Unit is defined by "unit" per hour. TODO: verify default value.

# Baselines
[vlbi_baseline]
epoch                       =
epoch:help                  = Estimation epoch for parameters estimated as pwlo. Only applicable for parameters defined in 
                              estimate_constant. Format: HH:MM:SS
knot_interval               =
knot_interval:help          = Number of seconds for each knot interval for parameters in (1) estimate_stochastic if estimator 
                              'cpwl' (continuous piecewise linear) is used or (2) estimate_constant if epoch is defined
                              (meaning the parameters are estimated as pwlo (piecewise linear offsets). Unit is 
                              defined via estimation option 'unit'.
process_noise               =
apriori_stdev               = 1
apriori_rate_stdev          =
unit                        = m
display_unit                = meter
neq_abs_constraint          = False
neq_abs_constraint:help     = Whether to apply absolute constraints to the parameter when solving the normal equation to obtain
                              an estimate. The constraint will be applied to all parameters in this sections.
neq_abs_constraint_weight   = 1e-6
neq_abs_constraint_weight:help = The sigma value used in the application of the absolute constraint (if it is applied).
                                 Absolute constraints may be applied automatically for some subparameters if there are too
                                 few observations to estimate the parameter (even if the flag is set to False). Unit
								 is defined by "unit".
neq_rate_constraint          = False
neq_rate_constraint:help     = Whether to apply rate constraints to the parameter when solving the normal equation to 
							   obtain an estimate. Only makes sense to apply when the parameter is estimated as pwlo. 
							   The constraint will be applied to all parameters in this sections. If
							   the parameters are not a part of the normal equation, this constraint will be ignored.
neq_rate_constraint_weight   = 1
neq_rate_constraint_weight:help = The sigma value used in the application of the rate constraint (if it is applied).
                                  Unit is defined by "unit" per hour. TODO: verify default value.

################################################################################
# Constraints 
#
[minimum_trf]
nnr                         = True
nnr_sigma                   = 1.5e-11
nnr_unit                    = rad
nnt                         = True
nnt_sigma                   = .0001
nnt_unit                    = meter
nns                         = False
nns_sigma                   = 1e-15
nns_unit                    = unit
reference_frame             =
reference_frame:help        = Defaults to first reference frame in a priori reference frame list. 
skip_stations               =
skip_stations:help          = Stations to exclude from the constraint.

[minimum_crf]
sigma                       = 1e-6
unit                        = rad
reference_frame =
reference_frame:help        = Defaults to first reference frame in a priori reference frame list
# E-mail from David Gordon 20221216 to IVS-analysis list: Recommends removing these sources from NNR for ICRF3
skip_sources                = 0700-465, 0742-562, 0809-493, 0918-534
skip_sources:help           = Sources to exclude from the NNR condition 


################################################################################
#
# OUTLIER DETECTION
[rms]
field                   = residual
field:help              = Field used to detect outliers
outlier_limit           = 3
outlier_limit:help      = Observations outside outlier_limit * rms are removed

[random]
percent                 = 0
percent:help            = Number of observations to discard randomly in estimation. Used for testing purposes

[vlbi_obs_per_station]
min_obs                 = 10
min_obs:help            = Minimum number of observations per station
store_ignore_station    = False
store_ignore_station:help = Stations with less than `min_obs` observations are added to the ignore_station block

####################################################
#
#
# POST PROCESSING
[vlbi_network_volume]
plot_triangulation = False

[vlbi_baseline_length]
plot_length_vs_ferr = False
save_to_file = True

#######################################################################################################################
#
# TIMESERIES
#
# IDENTIFIER        OPTIONS               DESCRIPTION
#______________________________________________________________________________________________________________________
# label             <num>                 Dataset identifier used for naming of time series dataset. Placeholder
#                                         {dataset_id} can be used.
# dataset_name      <name>                Dataset name used for naming of time series dataset. Placeholders like {tech}
#                                         or {dataset_name} can be used.
# func              <func:field[-stage]>  Define functions used for given dataset fields. Following functions can be #                                         used:
#                                           num:<field>-<stage> - calculate number of data from given dataset field
#                                           num_clock_breaks    - calculate number of clock breaks (only used for VLBI)
#                                           rms:<field>-<stage> - calculate rms of data from given dataset field   
# index             <field_names>         Fields to group over
# state             <field_names>         State vector fields included in the time series
# statistics                              Statistics fields included from dataset meta information
# text              <field_names>         Text fields included in the time series 
# meta              <field_names>         Name of fields that are stored on the top level of meta
# meta_index        <field_names>         Name of fields that are a subfield of the fields in index

# Writer for full timeseries
[timeseries]
index                       = station
dataset_id                  = 0
statistics                  = variance factor, degrees of freedom
# rms                         =
# num_obs                     =
func                        = num:obs-calculate, num:obs-estimate, rms:residual-calculate, rms:residual-estimate,
                              num_clock_breaks, count:station-estimate
meta                        = network_volume
meta_index                  = num_obs_schedule, num_obs_read
state                       = ${vlbi:estimate_constant}, ${vlbi:estimate_stochastic}

# Writer for Sinex file

[sinex__itrf2020b]
solution                    = 2020b

[sinex__2023b]
solution                    = 2023b

[sinex]
blocks                      = file_reference, file_comment, input_acknowledgements, nutation_data, precession_data,
                              source_id, site_id, site_eccentricity, solution_epochs, solution_statistics,
                              solution_estimate, solution_apriori, solution_normal_equation_vector,
                              solution_normal_equation_matrix:U
solution                    = 2023a
solution:help               = 5 letter code to identify the solution
analyst                     =
analyst:help                = User name of analyst (defaults to current user)
contacts                    =
contacts:help               = E-mail address of relevant contacts
file_agency                 = nma
file_agency:help            = 3-letter code for agency creating the sinex file 
data_agency                 = nma
data_agency:help            = 3-letter code for agency providing the data in the sinex file 
