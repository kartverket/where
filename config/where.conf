# This is the WHERE configuration file. It is read and handled by the where.config module, and further documentation
# can be found there.
#
# This file can be named either .whererc, whererc or where.conf.  WHERE will look for this file first in the current
# directory, then in the home direcory of the user, and finally in the system-wide /etc-directory.

# The path section specifies paths to the WHERE work directory, which is where all files are stored during
# calculations. Furthermore, the data path specifies where to find all input data. Most of the actual filenames are
# specified in files.conf relative to this path. Finally, the where directory is used by a few files, but will be set
# automatically by the program at runtime. Note that if you want to change these for a local computer it might be more
# effective to use a local WHERE configuration file like where_local.conf that can be kept outside the version control
# repository.


#______________________________________________________________________________________________________________________
[path]
:help   = The path section specifies paths to the Where work directory, which is where all files are stored during
          calculations. Furthermore, the data path specifies where to find all input data. Most of the actual filenames
          are specified in files.conf relative to this path. Finally, the where directory is used by a few files, but 
          will be set automatically by the program at runtime. Note that if you want to change these for a local 
          computer it might be more effective to use a local Where configuration file like where_local.conf that can be
          kept outside the version control repository.
          
home                     = ~

config                   = ~/where_config
config:help              = Base directory for config library files
config:wizard

data                     = ~/where/data
data:help                = Base directory for apriori data and observation files
data:wizard

log                      = ~/where/work
log:help                 = Base directory for log files (except analysis logs)
log:wizard

work                     = ~/where/work
work:help                = Base directory for working files of an analysis
work:wizard

publish                  = ~/where/publish
publish:help             = Base directory for result and output files after an analysis
publish:wizard


#______________________________________________________________________________________________________________________
[database]
:help   = Information about database access

nma_ws_site              =
nma_ws_site:help         = URL for getting information site by site from NMA station database (seSite), e.g.
                           'http://nnriap054:8080/SeSiteApiRestWS/site_by_-id'.
nma_ws_sites             = 
nma_ws_sites:help        = URL for getting information from all sites of NMA station database (seSite), e.g.
                           'http://nnriap054:8080/SeSiteApiRestWS/all_-siteconfigs'.

                           
#______________________________________________________________________________________________________________________
# TODO: Move ocean_tides* to section
[all]
:help   = Default settings common for all analysis

atmospheric_tides            = cm
atmospheric_tides:help       = Define atmospheric tidal loading model. Following models can be used:
                                 ce: Atmospheric tidal loading for center of (solid) Earth solution.
                                 cm: Atmospheric tidal loading for center of mass solution.

atmospheric_tides_cmc        = True
atmospheric_tides_cmc:help   = Use center of mass correction for atmospheric tide model.

ephemerides                  = de440
ephemerides:help             = Define JPL ephemerides, which should be used (e.g. de430). File key 'ephemerides' has
                               to be defined in files.conf configuration file.

eop_models                   = hf_eop_xyu, pmsdnut2, utlibr, rg_zont2
eop_models:help              = Define earth orientation parameter (EOP) models. Following models are defined:
                                 hf_eop_xyu: High-frequency model for diurnal and semidiurnal variations in EOP.
                                 ortho_eop:  Model for diurnal and semidiurnal variations in EOP (x,y,UT1) from ocean 
                                             tides (IERS routine ORTHO_EOP.F). See Section 8.2 in IERS2010.
                                 pmsdnut2:   Model of polar motion for a nonrigid Earth due to tidal gravitation (IERS 
                                             routine PMSDNUT2.F). See Section 5.5.1.3 in IERS2010.
                                 rg_zont2:   Model for zonal Earth tides effecting rotation of the Earth (IERS routine
                                             RG_ZONT2.F). See Section 8.1 in IERS2010.
                                 utlibr:     Model for subdiurnal libration in the axial component of rotation, 
                                             expressed by UT1 and LOD (IERS routine UTLIBR.F). See Section 5.5.3.2 in 
                                             IERS2010.

eop_sources                  = c04, bulletin_a
eop_sources:help             = Prioritized list of sources for apriori eop, Valid values: c04, c04_extended and 
                               bulletin_a
                               
eop_interpolation_method     = lagrange
eop_interpolation_method:help= Interplation method used for eop values. Valid values are lagrange or linear
eop_interpolation_window     = 4
eop_interpolation_window:help= Number of data points used for by the lagrange interpolation or to fit a linear trend.

eop_pole_model               = secular
eop_pole_model:help          = Define earth orientation parameter (EOP) pole model. The following models are defined:
                                 secular, mean_2015, mean_2010 or mean_2003

eop_cpo_model                =
eop_cpo_model:help           = Define model for celetial pole offset. If left blank the CPO from the parameter 
                               eop_sources will be used. The following models are defined:
                                 empirical_2020, zero

eop_remove_leap_seconds      = False
eop_remove_leap_seconds:help = Determines whether the interpolated values of a time series should contain the jump 
                               caused by leap seconds or not.

estimate_epochwise           = False
estimate_epochwise:help      = Epochwise Least square estimation instead of estimation for complete data period.

keep_covariance_file         = False
keep_covariance_file:help    = Keep covariance file of Kalman filtering.

ocean_tides                  = tpxo7.2_no_cmc
ocean_tides:help             = Define ocean tidal loading model (e.g. 'tpxo7.2_no_cmc' or 'fes2004_cmc').

ocean_tides_cmc              = True
ocean_tides_cmc:help         = Use center of mass correction for ocean tidal loading model.

files_to_publish             =
files_to_publish:help        = List of file keys to publish.

read_from_library            = True
read_from_library:help       = Read configuration from configuration library files (placed under 'config' path), which 
                               includes all configurations marked with ':library'. See also option 'write_to_library'.

reference_ellipsoid          = grs80
reference_ellipsoid:help     = Reference ellipsoid definition needed for generation of ellipsoidal coordinates. 
                               Following reference ellipsoides are defined: grs80, wgs84, wgs72.
                               
reference_frames             = itrf:2014
reference_frames:help        = A-priori station coordinates in given reference frame, which are used in estimation. 
                               The format <src:version_fmt> is used, whereby 'src' represents site coordinate source. 
                               Following sources are defined:
                                 custom: Read site position from a custom configuration file (see 'trf-custom' in 
                                         'files.conf')
                                 itrf:   Read site position from ITRF files in SINEX format by file key 
                                         'trf-itrf_snx__<pipeline>' in files.conf.
                                 nma:    Read site position from NMA seSite API by using URL definition in 'database' 
                                         section in where.conf file.
                                 slrf:   Read site position from quarterly-ish SLR reference frame solutions by using
                                         file key 'trf-slrf_snx' in files.conf.
                                 vtrf:   Read site poisition from quarterly VLBI reference frame using solutions.
                               'version' is the year, when the terrestrial reference (TRF) frame was established (e.g.
                               ITRF2014). 'fmt' defines the used file format, which can be:
                                 snx:    SINEX format
                                 ssc:    SSC format
                               If the file format is not defined, than SINEX format is used as default.

# Stages in pipeline to execute. If empty, run all registered stages in pipeline once
stage_iterate                =
stage_iterate:help           = Define stages for which an iteration should be done. The iteration is done over 
                               "stage_iterate_over" option definition.
                           
stage_iterate_over           =
stage_iterate_over:help      = Define criteria to iterate over like <opt_name:file_vars> (e.g. satellite:sat_name). The 
                               option criteria "opt_name" has to be defined in configuration file. "file_vars" is a 
                               file variable.
                           
stage_once                   =
stage_once:help              = Define stages, which should be processed sequentially.

write_level                  = operational
write_level:help             = Write levels are used to decide which fields of a dataset and other information should be 
                               written to disk. Levels can be:
                                 operational: Write dataset fields, which are used afterwards the analysis. 
                                              'operational' processing uses minimal disk memory.
                                 analysis:    Write dataset fields, which are useful in the analysis either to 
                                              interpret results or make analyses under processing (e.g. data which can 
                                              help to identify a clock break in VLBI).
                                 detail:      Other fields, which are useful (e.g. for debugging).
                               In addition write levels are used to define, what kind of information are written to a 
                               Where output file.

write_to_library             = False
write_to_library:help        = Write configuration library files for configuration options marked with ':library' to
                               'config' path. See also option 'read_from_library'.

# TODO
#[eop]
#models= 
#source 

#______________________________________________________________________________________________________________________
[minimum_trf]
:help	= definition of NNR/NNT constraint to a TRF
nnr                         = True
nnr_sigma                   = 1.5e-11
nnr_unit                    = rad
nnt                         = True
nnt_sigma                   = .0001
nnt_unit                    = meter
nns                         = False
nns_sigma                   = 1e-15
nns_unit                    = unit
reference_frame             =
reference_frame:help        = Defaults to first reference frame in apriori reference frame list. 
skip_stations               =
skip_stations:help          = Stations to exclude from the constraint.

[minimum_crf]
:help	= definition of NNR constraint to a CRF
sigma                       = 1e-6
unit                        = rad
reference_frame =
reference_frame:help        = Defaults to first reference frame in apriori reference frame list
skip_sources                =
skip_sources:help           = Sources to exclude from the NNR condition 

#______________________________________________________________________________________________________________________
[files]
:help   = The files section specifies the behavior of the where.files module.

download_missing         = True
download_missing:help    = Download missing apriori and observations files automatically?
download_missing:wizard

dependencies_fast        = True
dependencies_fast:help   = If True use timestamps for dependency checking, otherwise use md5 checksums.

publish                  = True
publish:help             = Copy output files to publish directory?
publish:wizard

#______________________________________________________________________________________________________________________
[institution_info]
:help  = Information about institutions. The list should be key'ed by the institution abbreviation, and the info
         should contain a comma separated list of <complete institution name> , <address>.
NMA                      = Norwegian Mapping Authority, Boks 600 Sentrum 3507 Hønefoss

#______________________________________________________________________________________________________________________
[log]
:help   = The log section specifies the behavior of the where.log module. In particular, the default log level can be 
          specified (see the where.lib.enums.LogLevel for which values are recognized), and we can control if logging 
          to file should be done.
          
default_level              = info
default_level:help         = Specify log level. Levels are defined in following order: 
                               none:  No logging information.
                               fatal: Fatal error information. Where run stops.
                               error: Error information.
                               warn:  Warning information.
                               info:  General information about Where run.
                               debug: Debugging information.
                               all:   All logging information.

log_to_file                = True
log_to_file:help           = Logging to file.

number_of_log_backups      = 5
number_of_log_backups:help = Number of logging backup files.


#______________________________________________________________________________________________________________________
[runner]
:help   = Configuration of where_runner.

stop_on_error            = False
stop_on_error:help       = Where stops in addition on logging level error beside fatal .

log_level                = warn
log_level:help           = The level of log messages from individual sessions that should be accumulated in the runner
                           log. Levels are defined in following order: 
                               none:  No logging information.
                               fatal: Fatal error information. Where run stops.
                               error: Error information.
                               warn:  Warning information.
                               info:  General information about Where run.
                               debug: Debugging information.
                               all:   All logging information.


#______________________________________________________________________________________________________________________
[system_test]
:help   = Writer used for testing
fields       = residual
fields:help  = Define fields for which system tests should be applied. 


#______________________________________________________________________________________________________________________
[troposphere_radio]
#:help   = Troposphere modelling specification. In priniciple only the mapping function model has to be defined, which
#          are:
#            mapping_function:          gmf, gpt2, gpt2w, vmf1_gridded
#        
#          Depending on the chosen model following meteorological data (MET), zenith hydrostatic
#          delay (ZHD), zenith wet delay models (ZWD) and gradient models (GRAD) are recommended to use:
#        
#            MAP. FUNC     MET           ZHD              ZWD           GRAD
#            ____________________________________________________________________
#            gmf           gpt           saastamoinen     none          apg
#            gpt2          gpt2          saastamoinen     saastamoinen  apg
#            gpt2w         gpt2w         saastamoinen     askne         apg
#            vmf1_gridded  vmf1_gridded  saastamoinen     vmf1_gridded  apg
#         
#          It is also possible to change the default settings for MET, ZHD, ZWD and GRAD models, but this should be done
#          carefully. Not all combinations are possible, for example the Askne model for the zenith wet delay
#          determination can only be used together with GPT2w, which provides the correct input parameters for the Askne
#          model. Following models are available:
#        
#            meteorological_data:       default, gpt, gpt2, gpt2w, site_pressure, vmf1_gridded, vmf1_station
#            zenith_hyrdostatic_delay:  saastamoinen, vmf1_gridded, vmf1_station
#            zenith_wet_delay:          none, askne, davis, saastamoinen, vmf1_gridded, vmf1_station
#            gradients:                 none, apg
#  
 
gradients                   = apg
gradients:help              = Define tropospheric asymmetric delay model. Following models are available:
                                 apg:  IERS routine APG.F used. See Section 9.2 in IERS2010.
                                 none: No model applied.
                                 
mapping_function            = vmf1_gridded
mapping_function:help       = Define mapping function model. Following models are available:
                                gmf:   Global Mapping Function (GMF) (J. Böhm, Niell, et al. 2006).
                                gpt2:  Mapping function based on Global Pressure and Temperature model 2 (GPT2) (Lagler 
                                       et al. 2013).
                                gpt2w: Mapping function based on Global Pressure and Temperature model 2 wet (GPT2w)
                                       (J. Böhm, Moeller, et al. 2015).
                                vmf1_gridded: Vienna Mapping Function 1 (VMF1) based on gridded data files (J. Böhm,
                                              Werl, and Schuh 2006). File keys 'vlbi' and 'orography_ell' has to be
                                              defined in configuration file.

                                vmf1_station: TODO
                                              
meteorological_data         = vmf1_gridded
meteorological_data:help    = Define meteorological data model. Following models are available:
                                default: TODO
                                gpt:   Global Pressue Temperature (GPT) model (J. Böhm, Heinkelmann, and Schuh 2007).
                                gpt2:  Mapping function based on Global Pressure and Temperature model 2 (GPT2) (Lagler 
                                       et al. 2013).
                                gpt2w: Mapping function based on Global Pressure and Temperature model 2 wet (GPT2w)
                                       (J. Böhm, Moeller, et al. 2015).
                                site_pressure: Use local site pressure information.
                                vmf1_gridded: Vienna Mapping Function 1 (VMF1) based on gridded data files (J. Böhm,
                                              Werl, and Schuh 2006). File keys 'vlbi' and 'orography_ell' has to be
                                              defined in configuration file.
                                vmf1_station: TODO

zenith_hydrostatic_delay    = saastamoinen
zenith_hydrostatic_delay:help = Define zenith hydrostatic troposphere delay model. Following models are available:
                                 saastamoinen: See model in Saastamoinen (1972).
                                 vmf1_gridded: TODO
                                 vmf1_station: TODO

zenith_wet_delay            = vmf1_gridded
zenith_wet_delay:help       = Define zenith wet troposphere delay model. Following models are available:
                                 askne: See Askne and Nordius (1987).
                                 davis: Based on Fortran routine http://acc.igs.org/tropo/wetsaas.f
                                 none: No model applied.
                                 saastamoinen: See model in Saastamoinen (1972).
                                 vmf1_gridded: Vienna Mapping Function 1 (VMF1) based on gridded data files (J. Böhm,
                                              Werl, and Schuh 2006). File keys 'vlbi' and 'orography_ell' has to be
                                              defined in configuration file.
                                 vmf1_station: TODO


#______________________________________________________________________________________________________________________
[trop_grad]
:help   =  Configuration for estimating troposphere gradients.

apriori_rate_stdev      = 1
apriori_rate_stdev:help = Apriori standard deviation of parameter rate used to initialize predicted state vector 
                          covariance. Only relevant if option 'estimate_method' is set to 'cpwl'. Unit is defined via
                          estimation option 'unit'.

apriori_stdev           = 1
apriori_stdev:help      = Apriori standard deviation of parameter used to initialize predicted state. Unit is defined 
                          via estimation option 'unit'.

display_unit            = meter
display_unit:help       = Unit used to display in There.

epoch                   =
epoch:help              = Estimation epoch for parameters estimated as pwlo. Only applicable for parameters defined in 
                          estimate_constant. Format: HH:MM:SS
                          
knot_interval           = 21600
knot_interval:library
knot_interval:help      = Number of seconds for each knot interval for parameters in (1) estimate_stochastic if estimator 
                          'cpwl' (continuous piecewise linear) is used or (2) estimate_constant if epoch is defined
                          (meaning the parameters are estimated as pwlo (piecewise linear offsets). Unit is 
                          defined via estimation option 'unit'.

process_noise           = 100
process_noise:help      = Define parameter process noise Kalman filter. Unit is defined via estimation option 'unit'.

skip_stations           =
skip_stations:library
skip_stations:help      = Comma separated list of station names, for which estimation of station related parameters
                          is skipped like tropospheric gradients.

unit                    = m
unit:help               = Unit definition used as unit for other estimation options.


#______________________________________________________________________________________________________________________                                              
[trop_wet]
:help   = Configuration for estimating troposphere wet delay. See explanation of following option under 'trop_grad'
          section.

apriori_rate_stdev    = 1
apriori_stdev         = 1
display_unit          = meter
epoch                 =
epoch:help            = Estimation epoch for parameters estimated as pwlo. Only applicable for parameters defined in 
                        estimate_constant. 
knot_interval         = 3600
knot_interval:library
knot_interval:help      = Number of seconds for each knot interval for parameters in (1) estimate_stochastic if estimator 
                          'cpwl' (continuous piecewise linear) is used or (2) estimate_constant if epoch is defined
                          (meaning the parameters are estimated as pwlo (piecewise linear offsets). Unit is 
                          defined via estimation option 'unit'.
process_noise         = 100
skip_stations         =
skip_stations:library
unit                  = m


# Information about users of the software. The list should be key'ed by the username, and the info should contain a
# comma separated list of <name>, <email>, <institution>.
#______________________________________________________________________________________________________________________
[user_info]
:help   = Users of Where in the format <username> = <name>, <email>, <institution>
:wizard = Add new users of Where to the system, leave blank if no new users
hjegei                   = Geir Arne Hjelle, geir.arne.hjelle@kartverket.no, NMA
dahmic                   = Michael Dähnn, michael.daehnn@kartverket.no, NMA
fauing                   = Ingrid Fausk, ingrid.fausk@kartverket.no, NMA
kirann                   = Ann-Silje Kirkvik, ann-silje.kirkvik@kartverket.no, NMA






